// Keyframes for gradient animation
@keyframes gradient {
  0% { background-size: 100%; }
  50% { background-size: 150%; }
  100% { background-size: 100%; }
}

// Dotted background pattern from the glass codepen
%dotted-background {
  background: 
    radial-gradient(#ffffff54 2px, transparent 0) 0 0/40px 40px, 
    radial-gradient(#00000026 2px, transparent 0) -1px 1px/40px 40px, 
    radial-gradient(ellipse at 150% -50%, #6d788f, #fff);
}

// Base glass effect from the codepen
%glass-effect {
  background: rgba(255, 255, 255, 0.25);
  backdrop-filter: blur(12px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  
  --shadow-color: 0deg 0% 64%;
  --shadow-elevation-high:
    0.5px 1px 1.1px hsl(var(--shadow-color) / 0.28),
    1.4px 3.1px 3.4px -0.4px hsl(var(--shadow-color) / 0.27),
    2.5px 5.3px 5.9px -0.7px hsl(var(--shadow-color) / 0.25),
    3.9px 8.4px 9.3px -1.1px hsl(var(--shadow-color) / 0.24),
    6px 12.9px 14.3px -1.5px hsl(var(--shadow-color) / 0.23),
    9px 19.5px 21.6px -1.8px hsl(var(--shadow-color) / 0.21),
    13.4px 28.9px 32px -2.2px hsl(var(--shadow-color) / 0.2),
    19.3px 41.7px 46.2px -2.6px hsl(var(--shadow-color) / 0.19),
    27.1px 58.5px 64.8px -2.9px hsl(var(--shadow-color) / 0.17),
    37.1px 80px 88.6px -3.3px hsl(var(--shadow-color) / 0.16);
  
  --inner-light: inset 0 -6px 2px -5px #ffffff40, inset 0 -8px 3px -5px #ffffff50, inset 0 -20px 10px -15px #ffffff30, inset 7px 25px 10px -20px #ffffff30;
  --inner-shadow: inset -20px 5px 10px -20px #00000015, inset -40px 50px 7px -55px #00000015;
  --external-light: 5px -30px 30px -20px #ffffff40, 5px 10px 30px -20px #ffffff40;
  
  box-shadow: var(--external-light), var(--shadow-elevation-high), var(--inner-light), var(--inner-shadow);
}

// Main container that positions the three panels
.ai-chat-container {
  --r: 20px;
  --c-text: #171717;
  --header-h: 8rem;
  --input-h: 4rem;
  --messages-h: calc(100% - var(--header-h) - var(--input-h) - (var(--gap) * 2)); // Fill remaining space
  --gap: 0.5rem;

  position: relative; // Changed from absolute since it's now in a flex container
  width: 100%;
  height: 100%; // Take full height of the 80% container
  z-index: 100;
  
  border-radius: calc(var(--r) + 10px);
  padding: 10px;
  
  // Always show all panels in split-screen layout
  height: 100%;
  display: flex;
  flex-direction: column;
  
  .ai-chat-messages,
  .ai-chat-input-area {
    opacity: 1;
    pointer-events: auto;
    transform: translateY(0);
  }
}

// Panel 1: Header
.ai-chat-header {
  @extend %glass-effect;
  position: relative;
  z-index: 3;
  display: flex;
  align-items: center;
  gap: 2rem;
  height: var(--header-h);
  padding: 0 2rem;
  border-radius: var(--r);
  cursor: pointer;
  width: 100%;
  font-size: 1.1rem;
  flex-shrink: 0; // Don't shrink in flex layout
  
  // Add distinct background for header
  background: rgba(255, 255, 255, 0.3);
  
  // Add the glass gradient animation
  background-position: center;
  background-image: linear-gradient(45deg, rgba(133, 213, 231, 0.3), rgba(122, 158, 210, 0.3), rgba(186, 106, 201, 0.2), rgba(222, 84, 194, 0.1), rgba(248, 107, 45, 0.3));
  animation: gradient 10s linear infinite;
  
  // Add reflection effects
  &:before, &:after {
    content: '';
    pointer-events: none;
    position: absolute;
    border-radius: calc(var(--r) - var(--i));
    --light-reflect: inset -5px 20px 2px -20px rgba(255, 255, 255, 0.3), inset 5px -20px 2px -20px rgba(255, 255, 255, 0.3);
    --shadow-reflect: inset -19px 1px 2px -20px rgba(0, 0, 0, 0.1), inset 19px 1px 2px -20px rgba(0, 0, 0, 0.1), inset 19px 1px 2px -20px rgba(0, 0, 0, 0.1), inset -15px -26px 3px -30px rgba(0, 0, 0, 0.1);
    box-shadow: var(--light-reflect), var(--shadow-reflect);
  }
  
  &:before {
    --i: 2px;
    opacity: 0.6;
    inset: var(--i);
  }
  
  &:after {
    --i: 4px;
    inset: var(--i);
  }
  
  > * {
    position: relative;
    z-index: 1;
  }
}

.form-icon {
  position: relative;
  background: rgba(255, 255, 255, 0.2);
  display: flex;
  align-items: center;
  justify-content: center;
  aspect-ratio: 1;
  flex: 0 0;
  border-radius: 50%;
  height: 4rem;
  width: 4rem;
  flex-shrink: 0;
  --light-reflect: inset -5px 20px 2px -20px rgba(255, 255, 255, 0.3), inset 5px -20px 2px -20px rgba(255, 255, 255, 0.3);
  --shadow-reflect: inset -19px 1px 2px -20px rgba(0, 0, 0, 0.1), inset 19px 1px 2px -20px rgba(0, 0, 0, 0.1), inset 19px 1px 2px -20px rgba(0, 0, 0, 0.1), inset -15px -26px 3px -30px rgba(0, 0, 0, 0.1);
  box-shadow: var(--light-reflect), var(--shadow-reflect);
  z-index: 10; // Ensure it's above other elements
  overflow: visible; // Allow the orb to be visible
  
  // Add glowing bevel effect like the START button
  &::before,
  &::after {
    content: "";
    position: absolute;
    background: linear-gradient(90deg, hsla(0, 0%, 100%, 1) 0%, hsla(306, 82%, 83%, 1) 50%, hsla(181, 79%, 85%, 1) 100%);
    border-radius: 50%;
  }
  
  &::before {
    top: -5px;
    left: -5px;
    height: calc(100% + 10px);
    width: calc(100% + 10px);
    z-index: -1;
  }
  
  &::after {
    top: -10px;
    left: -10px;
    height: calc(100% + 20px);
    width: calc(100% + 20px);
    z-index: -2;
    filter: blur(12px);
    animation: 2s moveBgGlow linear infinite both;
  }
}

@keyframes moveBgGlow {
  to {
    background-position: 100px 0%;
  }
}

.form-title {
  font-size: 1.25rem;
  color: var(--c-text);
  white-space: nowrap;
}

.form-close-button {
  position: absolute;
  color: var(--c-text);
  background: rgba(0, 0, 0, 0.05);
  top: 0.75rem;
  right: 0.75rem;
  display: grid; place-content: center;
  height: 1.5rem; width: 1.5rem;
  border-radius: 50%;
  cursor: pointer; border: none;
  opacity: 0; transition: 250ms ease opacity;
  .open & { opacity: 1; }
}

// Panel 2: Message History
.ai-chat-messages {
  @extend %glass-effect;
  position: relative; // Changed from absolute
  width: 100%;
  flex: 1; // Take remaining space
  border-radius: var(--r);
  z-index: 2;
  margin: var(--gap) 0; // Add margin top and bottom
  
  // Distinct background for messages
  background: rgba(255, 255, 255, 0.6); // Increased opacity to reduce transparency
  
  // Add dotted background only to messages area
  background-image: 
    radial-gradient(rgba(255, 255, 255, 0.4) 1px, transparent 1px),
    radial-gradient(rgba(0, 0, 0, 0.15) 1px, transparent 1px);
  background-size: 20px 20px, 20px 20px;
  background-position: 0 0, 10px 10px;
  
  transition: opacity 300ms 100ms ease, transform 300ms 100ms ease;
  .open & { opacity: 1; pointer-events: auto; transform: translateY(0); }
}

.messages-list-inner {
  width: 100%; height: 100%;
  overflow-y: auto;
  padding: 1.5rem;
  display: flex; flex-direction: column; gap: 1rem;
  color: var(--c-text);
  
  // Improve text contrast
  .message {
    background: rgba(255, 255, 255, 0.8);
    border-radius: 12px;
    padding: 1rem;
    color: #1a1a1a;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.3);
    
    &.user {
      background: rgba(59, 130, 246, 0.3);
      margin-left: 2rem;
      align-self: flex-end;
    }
    
    &.assistant {
      background: rgba(34, 197, 94, 0.3);
      margin-right: 2rem;
      align-self: flex-start;
    }
    
    .message-content {
      font-size: 15px;
      line-height: 1.5;
      
      // Style markdown content for assistant messages
      h1, h2, h3, h4, h5, h6 {
        color: #1a1a1a;
        margin: 0.5rem 0;
      }
      
      p {
        margin: 0.5rem 0;
        color: #1a1a1a;
      }
      
      code {
        background: rgba(0, 0, 0, 0.1);
        padding: 0.2rem 0.4rem;
        border-radius: 4px;
        font-family: 'Courier New', monospace;
      }
      
      pre {
        background: rgba(0, 0, 0, 0.1);
        padding: 1rem;
        border-radius: 8px;
        overflow-x: auto;
        
        code {
          background: none;
          padding: 0;
        }
      }
      
      ul, ol {
        padding-left: 1.5rem;
        
        li {
          margin: 0.25rem 0;
        }
      }
    }
  }
}

// Panel 3: Input Area
.ai-chat-input-area {
  @extend %glass-effect;
  position: relative;
  width: 100%;
  height: var(--input-h);
  border-radius: var(--r);
  z-index: 2;
  flex-shrink: 0;
  
  // Distinct background for input
  background: rgba(255, 255, 255, 0.4);
  
  form {
    position: relative;
    width: 100%;
    height: 100%;
  }
  
  textarea {
    width: 100%;
    height: 100%;
    background: transparent;
    border: none;
    color: #1a1a1a; // Much darker text
    font-weight: 500; // Make text bolder
    padding: 1rem;
    padding-right: 5rem; // Make space for send button
    resize: none;
    outline: none;
    font-family: inherit;
    font-size: 16px; // Larger font size
    display: flex;
    align-items: center; // Center text vertically
    
    &::placeholder {
      color: rgba(26, 26, 26, 0.8); // Even darker placeholder for better readability
      font-weight: 500;
    }
  }
}

.send-button-overlay {
  position: absolute;
  right: 0.5rem;
  top: 50%;
  transform: translateY(-50%);
  width: 3rem;
  height: 3rem;
  z-index: 10;
}

// 3D Input Container Styles from the codepen
.ai-input-container {
  --perspective: 1000px;
  --translateY: 15px;
  position: absolute;
  inset: -0.5rem;
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  transform-style: preserve-3d;
}

.area {
  // Invisible hover areas for 3D effect
  pointer-events: auto;
}

.container-wrap {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translateX(-50%) translateY(-50%);
  z-index: 9;
  transform-style: preserve-3d;
  cursor: pointer;
  width: 3rem;
  height: 3rem;
  transition: all 0.3s ease;
  
  &:hover {
    transform: translateX(-50%) translateY(-50%) scale(1.05);
  }
  
  &:active {
    transform: translateX(-50%) translateY(-50%) scale(0.95);
  }
}

.card {
  width: 3rem;
  height: 3rem;
  transform-style: preserve-3d;
  will-change: transform;
  transition: all 0.6s ease;
  border-radius: 12px; // Changed from 50% to make it square with rounded corners
  display: flex;
  align-items: center;
  transform: translateZ(20px);
  justify-content: center;
  position: relative;
  
  &:hover {
    box-shadow: 0 5px 20px rgba(0, 0, 60, 0.25), inset 0 0 10px rgba(255, 255, 255, 0.5);
  }
}

.background-blur-balls {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translateX(-50%) translateY(-50%);
  width: 100%;
  height: 100%;
  z-index: -1;
  border-radius: 12px; // Changed from 50% to match square shape
  transition: all 0.3s ease;
  background-color: rgba(255, 255, 255, 0.8);
  overflow: hidden;
}

.balls {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translateX(-50%) translateY(-50%);
  animation: rotate-background-balls 10s linear infinite;
  
  .container-wrap:hover & {
    animation-play-state: paused;
  }
}

.ball {
  width: 2rem;
  height: 2rem;
  position: absolute;
  border-radius: 50%;
  filter: blur(10px);
  
  &.violet {
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    background-color: #9147ff;
  }
  
  &.green {
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    background-color: #34d399;
  }
  
  &.rosa {
    top: 50%;
    left: 0;
    transform: translateY(-50%);
    background-color: #ec4899;
  }
  
  &.cyan {
    top: 50%;
    right: 0;
    transform: translateY(-50%);
    background-color: #05e0f5;
  }
}

.content-card {
  width: 3rem;
  height: 3rem;
  display: flex;
  border-radius: 12px; // Changed from 50% to match square shape
  transition: all 0.3s ease;
  overflow: hidden;
  position: relative;
  z-index: 1;
}

.background-blur-card {
  width: 100%;
  height: 100%;
  backdrop-filter: blur(20px);
  border-radius: 12px; // Changed from 50% to match square shape
  display: flex;
  align-items: center;
  justify-content: center;
}



.btn-submit {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0;
  background-image: linear-gradient(to top, #ff4141, #9147ff, #3b82f6);
  border-radius: 12px; // Changed from 50% to match square shape
  box-shadow: inset 0 2px 1px -1px rgba(255, 255, 255, 0.5);
  cursor: pointer;
  border: none;
  outline: none;
  opacity: 0.9;
  transition: all 0.15s ease;
  
  i {
    width: 2rem;
    height: 2rem;
    padding: 0.25rem;
    background: rgba(0, 0, 0, 0.1);
    border-radius: 8px; // Slightly rounded for the inner element
    backdrop-filter: blur(3px);
    color: #cfcfcf;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  svg {
    transition: all 0.3s ease;
    width: 1rem;
    height: 1rem;
  }
  
  &:hover {
    opacity: 1;
    transform: scale(1.05);
    background-image: linear-gradient(to top, #ff6b6b, #a855f7, #60a5fa);
    box-shadow: 0 0 20px rgba(255, 107, 107, 0.5), inset 0 2px 1px -1px rgba(255, 255, 255, 0.7);
    
    svg {
      color: #f3f6fd;
      filter: drop-shadow(0 0 8px #ffffff);
    }
  }
  
  &:focus svg {
    color: #f3f6fd;
    filter: drop-shadow(0 0 5px #ffffff);
    transform: scale(1.2) rotate(45deg);
  }
  
  &:active {
    transform: scale(0.95);
  }
  
  &:disabled {
    filter: grayscale(80%);
    opacity: 0.6;
    cursor: not-allowed;
  }
}

@keyframes rotate-background-balls {
  from {
    transform: translateX(-50%) translateY(-50%) rotate(360deg);
  }
  to {
    transform: translateX(-50%) translateY(-50%) rotate(0);
  }
}

// 3D hover effects for different areas
.area:nth-child(15):hover ~ .container-wrap .card {
  transform: perspective(var(--perspective)) rotateX(-10deg) rotateY(10deg) translateZ(var(--translateY)) scale3d(1, 1, 1);
}
.area:nth-child(14):hover ~ .container-wrap .card {
  transform: perspective(var(--perspective)) rotateX(-10deg) rotateY(5deg) translateZ(var(--translateY)) scale3d(1, 1, 1);
}
.area:nth-child(13):hover ~ .container-wrap .card {
  transform: perspective(var(--perspective)) rotateX(-10deg) rotateY(0) translateZ(var(--translateY)) scale3d(1, 1, 1);
}
.area:nth-child(12):hover ~ .container-wrap .card {
  transform: perspective(var(--perspective)) rotateX(-10deg) rotateY(-5deg) translateZ(var(--translateY)) scale3d(1, 1, 1);
}
.area:nth-child(11):hover ~ .container-wrap .card {
  transform: perspective(var(--perspective)) rotateX(-10deg) rotateY(-10deg) translateZ(var(--translateY)) scale3d(1, 1, 1);
}
.area:nth-child(10):hover ~ .container-wrap .card {
  transform: perspective(var(--perspective)) rotateX(0) rotateY(10deg) translateZ(var(--translateY)) scale3d(1, 1, 1);
}
.area:nth-child(9):hover ~ .container-wrap .card {
  transform: perspective(var(--perspective)) rotateX(0) rotateY(5deg) translateZ(var(--translateY)) scale3d(1, 1, 1);
}
.area:nth-child(8):hover ~ .container-wrap .card {
  transform: perspective(var(--perspective)) rotateX(0) rotateY(0) translateZ(var(--translateY)) scale3d(1, 1, 1);
}
.area:nth-child(7):hover ~ .container-wrap .card {
  transform: perspective(var(--perspective)) rotateX(0) rotateY(-5deg) translateZ(var(--translateY)) scale3d(1, 1, 1);
}
.area:nth-child(6):hover ~ .container-wrap .card {
  transform: perspective(var(--perspective)) rotateX(0) rotateY(-10deg) translateZ(var(--translateY)) scale3d(1, 1, 1);
}
.area:nth-child(5):hover ~ .container-wrap .card {
  transform: perspective(var(--perspective)) rotateX(10deg) rotateY(10deg) translateZ(var(--translateY)) scale3d(1, 1, 1);
}
.area:nth-child(4):hover ~ .container-wrap .card {
  transform: perspective(var(--perspective)) rotateX(10deg) rotateY(5deg) translateZ(var(--translateY)) scale3d(1, 1, 1);
}
.area:nth-child(3):hover ~ .container-wrap .card {
  transform: perspective(var(--perspective)) rotateX(10deg) rotateY(0) translateZ(var(--translateY)) scale3d(1, 1, 1);
}
.area:nth-child(2):hover ~ .container-wrap .card {
  transform: perspective(var(--perspective)) rotateX(10deg) rotateY(-5deg) translateZ(var(--translateY)) scale3d(1, 1, 1);
}
.area:nth-child(1):hover ~ .container-wrap .card {
  transform: perspective(var(--perspective)) rotateX(10deg) rotateY(-10deg) translateZ(var(--translateY)) scale3d(1, 1, 1);
}